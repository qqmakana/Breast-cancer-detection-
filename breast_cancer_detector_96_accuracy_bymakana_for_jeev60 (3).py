# -*- coding: utf-8 -*-
"""Breast cancer detector 96% accuracy byMakana for Jeev60

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/qqmakana/coursera-test/blob/master/Breast_cancer_detector_96_accuracy_byMakana_for_Jeev60.ipynb

**Breast Cancer detector with 96% accuracy**

>
"""

import tensorflow as tf
import pandas as pd
import numpy as np

from sklearn import preprocessing
from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Flatten, Dense, Dropout, BatchNormalization
from tensorflow.keras.layers import Conv1D, MaxPool1D
from tensorflow.keras.optimizers import Adam
from tensorflow.keras.preprocessing.image import ImageDataGenerator

import matplotlib.pyplot as plt
import seaborn as sns

from sklearn import datasets, metrics
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

cancer = datasets.load_breast_cancer()
print(cancer.DESCR)

X = pd.DataFrame(data=cancer.data, columns=cancer.feature_names)
X.head()

y= cancer.target
y

X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2, random_state=0, stratify=y)

X.shape

X_train.shape

X_test.shape

training_images  = X_train / 255.0
test_images = X_test / 255.0

model = Sequential()
model.add(Dense(9, activation='sigmoid', input_shape=(30,)))
model.add(Dense(27, activation='sigmoid'))
model.add(Dropout(0.25))
model.add(Dense(54, activation='sigmoid'))
model.add(Dropout(0.25))
model.add(Dense(27, activation='sigmoid'))
model.add(Dropout(0.25))
model.add(Dense(1, activation='sigmoid'))

model.compile(optimizer=keras.optimizers.Adam(), loss=keras.losses.mean_squared_logarithmic_error)

model.fit(X_train, y_train, batch_size=30, epochs=2000, verbose=1, validation_data=(X_test, y_test))

loss = model.evaluate(X_test, y_test, verbose=1, batch_size=30)

print("Final result is {}".format(100-loss*100))